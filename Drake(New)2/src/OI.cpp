// RobotBuilder Version: 1.5
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


#include "OI.h"

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=INCLUDES
#include "SmartDashboard/SmartDashboard.h"
#include "Commands/AutonomousCommand.h"
#include "Commands/Camera.h"
#include "Commands/GyroCommand.h"
#include "Commands/InitEncoder.h"
#include "Commands/Level1.h"
#include "Commands/Level2.h"
#include "Commands/Level3.h"
#include "Commands/Level4.h"
#include "Commands/ManualWinch.h"
#include "Commands/MotorRun.h"
#include "Commands/ServoCommand.h"
#include "Commands/pPushIn.h"
#include "Commands/pPushOut.h"


    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=INCLUDES

OI::OI() {
	// Process operator interface input here.
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS

	joystick = new Joystick(0);
	
	initEncoderButton = new JoystickButton(joystick, 5);
	initEncoderButton->WhenPressed(new InitEncoder());
	manualWinchButton = new JoystickButton(joystick, 4);
	manualWinchButton->WhenPressed(new ManualWinch());
	levelFourButton8 = new JoystickButton(joystick, 8);
	levelFourButton8->WhenPressed(new Level4());
	levelthreeButton7 = new JoystickButton(joystick, 7);
	levelthreeButton7->WhenPressed(new Level3());
	leveltwoButton9 = new JoystickButton(joystick, 9);
	leveltwoButton9->WhenPressed(new Level2());
	levelonebutton10 = new JoystickButton(joystick, 10);
	levelonebutton10->WhenPressed(new Level1());
	joystickButton5 = new JoystickButton(joystick, 5);
	joystickButton5->WhenPressed(new GyroCommand());
	joystickButton4 = new JoystickButton(joystick, 4);
	joystickButton4->WhenPressed(new ServoCommand());
	joystickButton3 = new JoystickButton(joystick, 3);
	joystickButton3->WhenPressed(new MotorRun());
	joystickButton2 = new JoystickButton(joystick, 2);
	joystickButton2->WhenPressed(new pPushIn());
	joystickButton1 = new JoystickButton(joystick, 1);
	joystickButton1->WhenPressed(new pPushOut());
     

        // SmartDashboard Buttons
	SmartDashboard::PutData("Autonomous Command", new AutonomousCommand());

	SmartDashboard::PutData("MotorRun", new MotorRun());

	SmartDashboard::PutData("pPushIn", new pPushIn());

	SmartDashboard::PutData("pPushOut", new pPushOut());

	SmartDashboard::PutData("ServoCommand", new ServoCommand());

	SmartDashboard::PutData("GyroCommand", new GyroCommand());

	SmartDashboard::PutData("Camera", new Camera());

	SmartDashboard::PutData("Level1", new Level1());

	SmartDashboard::PutData("Level2", new Level2());

	SmartDashboard::PutData("Level3", new Level3());

	SmartDashboard::PutData("Level4", new Level4());

	SmartDashboard::PutData("ManualWinch", new ManualWinch());

	SmartDashboard::PutData("InitEncoder", new InitEncoder());


    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
}

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=FUNCTIONS

Joystick* OI::getJoystick() {
	return joystick;
}


    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=FUNCTIONS
